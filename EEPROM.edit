// Include relevant library
#include <EEPROM.h>

  int runner = 0;
  int value;
  uint8_t addr = 3; //The adress from which we are allowed to write. (Because the adresses before are reserved to motor position)

// Initialisation
void setup() {
  Serial.begin(9600);
}


///////////////////////////////
// To make it print the given values, for confirming code is working.
void loop() {
  // put your main code here, to run repeatedly:
  if(runner==0){


    //EEPROMAdd(1,1,1,1); // Runs the Add function
    //EEPROMAdd(2,2,2,2);
    //EEPROMAdd(3,3,3,3);
    //EEPROMAdd(4,4,4,4);
    
  
    //EEPROMDel(2); //Runs the Delete function.

    //EEPROMAdd(1,15,45,5);
   
    
  for (int i=0; i <= 30; i++){
    value = EEPROM.read(i);
    Serial.print(i);
    Serial.print("\t");
    Serial.print(value, DEC);
    Serial.println();
  }
  runner = 1;
}
}
////////////////////////////////////

/////////////////////////////////////////////////
// The important Add-function
void EEPROMAdd(uint8_t wd,uint8_t hr,uint8_t mi,uint8_t pos){
  uint8_t x = EEPROM.read(addr+1); // Read the number of saved positions from the addr+1 adress
  uint8_t addrn = addr+2+x*4; //The andress number, from which the positions will be saved to. Adds x*4 every time to avoid overwriting older data. 
  EEPROM.write(addrn,wd); //Write the weekday (1-8)
  EEPROM.write(addrn+1,hr); //Write the hour (0-23)
  EEPROM.write(addrn+2,mi); //Write the minute (0-59)
  EEPROM.write(addrn+3,pos); //Write to position (1-10)

  EEPROM.write(addr+1,x+1); //Adds one to the number of adresses saved, sÃ¥ they wont be overwritten. 
 }

// The important Delete-function
void EEPROMDel(uint8_t index){
uint8_t x = EEPROM.read(addr+1); // Read the number of saved positions from the addr+1 adress

  for(int i = index-1; i <=x; i++){ //The first loop runs through the index'es
    for(int j = 0; j <=3; j++){ //The seccond loop runs through the 4 positions of each index.
      EEPROM.write(addr+2+i*4+j,EEPROM.read(addr+2+i*4+j+4)); //The relevant place is overwritten by the +4 position
    }
  }
  EEPROM.write(addr+1,x-1); //Subtracts 1 from the number of saved positions. 
}
